@model IPagedList<Class>

@foreach (var item in Model)
{
    <div id="enrollable-class-@item.Id">
        <h3>
            @item.Course.Title
            <small>@item.Id</small>
        </h3>
        <h4>
            @item.Professor.Name
            <small>@item.Professor.Email</small>
        </h4>
        <p>
            @foreach (Schedule schedule in @item.Schedules)
            {
                <span class="label label-default">@schedule</span>
            }
            <span class="label label-default">
                @item.Term, @item.Year
            </span>
        </p>
        <div class="row">
            <div class="col-xs-10">
                <div class="progress progress-striped active">
                    <div class="progress-bar" role="progressbar"
                         aria-valuenow="@item.Enrollment.Count"
                         aria-valuemin="0" aria-valuemax="@item.Size"
                         style="width: @(100 * item.Enrollment.Count / item.Size)%;">
                        <span class="sr-only">@(100 * item.Enrollment.Count / item.Size)% full</span>
                        @(100 * item.Enrollment.Count / item.Size)%
                    </div>
                </div>
            </div>
            <div class="col-xs-2">
                <span class="badge" title="Students currently enrolled">
                    <strong>@item.Enrollment.Count</strong>
                </span>
            </div>
        </div>

        @if (!item.Enrollable)
        {
            <input type="button" class="btn btn-danger btn-sm disabled" value="Closed" disabled="disabled" />
        }
        else if (item.Enrollment.Any(e => e.StudentId == User.Identity.GetUserId()))
        {
            using (Html.BeginForm("Unenroll", "Enrollment"))
            {
                @Html.AntiForgeryToken()
                <input data-val="true"
                       data-val-number="The field Id must be a number."
                       data-val-required="The Id field is required."
                       id="item_Id" name="Id" type="hidden" value="@item.Id">
                <input type="submit" value="Unenroll" class="btn btn-sm btn-warning" />
            }
        }
        else if (item.Enrollment.Count >= item.Size)
        {
            <input type="button" class="btn btn-warning btn-sm disabled" value="Enrollment limit exceded" disabled="disabled" />
        }
        else
        {
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <input data-val="true"
                       data-val-number="The field Id must be a number."
                       data-val-required="The Id field is required."
                       id="item_Id" name="Id" type="hidden" value="@item.Id">
                <input type="submit" value="Enroll" class="btn btn-sm btn-info" />
            }
        }
    </div>
}


